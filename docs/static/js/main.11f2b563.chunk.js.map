{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","category","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifts","a","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAGVC,mBAAS,IAHC,mBAGvCC,EAHuC,KAG3BC,EAH2B,KAoB9C,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAE5BR,GAAe,SAAAS,GAAQ,OAAMP,GAAN,mBAAqBO,OAC5CN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SApBc,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,a,QCPnBG,EAAc,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAErC,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCLHK,EAAQ,uCAAG,WAAOZ,GAAP,uBAAAa,EAAA,4DAEL,mCACTL,EAHc,iDAGkCR,EAHlC,6BAEL,oCAFK,SAKDc,MAAON,GALN,cAKdO,EALc,gBAMGA,EAAKC,OANR,uBAMZC,EANY,EAMZA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHd,GAAIc,EAAId,GACRC,MAAOa,EAAIb,MACXC,IAAG,UAAEY,EAAIC,cAAN,aAAE,EAAYC,iBAAiBd,QAZtB,kBAgBbU,GAhBa,4CAAH,sDCGRK,EAAU,SAAC,GAAkB,IAAhBvB,EAAe,EAAfA,SAAe,ECCb,SAAEA,GAAe,IAAD,EAGdR,mBAAS,CAC/ByB,KAAM,GACNO,SAAS,IAL2B,mBAGjCC,EAHiC,KAG1BC,EAH0B,KAqBxC,OAbAC,qBAAW,WAEPf,EAAUZ,GAAW4B,MAAM,SAAAC,GAEvBH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAKlB,CAACxB,IAEGyB,EDnB0BK,CAAc9B,GAAlCqB,EAHwB,EAG7BJ,KAAaO,EAHgB,EAGhBA,QAErB,OACI,qCACI,qBAAIf,UAAU,oCAAd,UAAmDT,EAAnD,OAEA,sBAAKS,UAAU,YAAf,UACMe,GAAW,mBAAGf,UAAU,mCAAb,wBAELY,EAAOF,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADCA,EAAId,cEf5ByB,EAAe,WAAO,IAAD,EAEMvC,mBAAS,CAAC,YAFhB,mBAEvBwC,EAFuB,KAEXzC,EAFW,KAK9B,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQyC,EAAWb,KAAK,SAAAnB,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCTjCiC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.11f2b563.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = ( e ) => {\n        setInputValue( e.target.value );\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        \n        if ( inputValue.trim().length > 2 ) {\n\n            setCategories( category => [ inputValue, ...category ] )\n            setInputValue('')\n        } \n\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value={ inputValue }\n                onChange={ handleInputChange }\n            />\n        </form>\n    )\n}\n\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","import React from 'react'\n\nexport const GifGridItem = ({ id, title, url }) => {\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    )\n}\n","\n\nexport const getGifts = async( category ) => {\n\n    const apiKey = 'f4ZS6MoVo1tYwG924E0joptSiP6nP6MU';\n    const url = `https://api.giphy.com/v1/gifs/search?q=${category}&limit=10&api_key=${apiKey}`\n    \n    const resp = await fetch( url );\n    const { data } = await resp.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n    return gifs;\n}\n","import React from 'react'\nimport { GifGridItem } from './GifGridItem';\nimport { useFetchGifs } from '../hooks/useFetchGifs'\n\n\nexport const GifGrid = ({ category }) => {\n\n\n    const { data:images, loading } = useFetchGifs( category );\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{category} </h3>\n          \n            <div className=\"card-grid\">\n                { loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\n                    {\n                        images.map( img => (\n                            <GifGridItem\n                                key={img.id} \n                                {...img} \n                            />\n                        ))\n                    }\n                \n            </div>\n        </>\n    )\n}\n","\n\n\nimport { useEffect, useState } from 'react'\nimport { getGifts } from '../helpers/getGifs'\n\nexport const useFetchGifs = ( category ) => {\n   \n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    })\n\n    useEffect( () => {\n\n        getGifts( category ).then( imgs => {\n\n            setState({\n                data: imgs,\n                loading: false\n            })\n\n        } )\n\n    }, [category])\n\n    return state;\n\n}\n","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['Pokemon']);\n\n    \n    return (\n        <div>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={setCategories} />\n            <hr/>\n\n            <ol>\n                {\n                    categories.map( category => (\n                        <GifGrid \n                            key={category}\n                            category={category} \n                        />\n                    ))\n                }\n            </ol>\n        </div>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\n\n\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}